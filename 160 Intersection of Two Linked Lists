/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        ListNode *curA = headA;
        ListNode *curB = headB;
        
        int len_A = 0;
        int len_B = 0;
        
        while(curA){ ++len_A; curA = curA->next;}
        while(curB){ ++len_B; curB = curB->next;}
        
        for(int i = abs(len_A - len_B); i > 0; i-- )
        {
            if(len_A > len_B) headA = headA->next;
            else headB = headB->next;
        }
        
        while(headA && headB)
        {
            if(headA == headB) return headA;
            else
            {
                headA = headA->next;
                headB = headB->next;
            }
        }
    }
};
